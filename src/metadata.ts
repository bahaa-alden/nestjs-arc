/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/post/post.entity"]: await import("./modules/post/post.entity"),
        ["./common/constants/language-code"]: await import("./common/constants/language-code"),
        ["./modules/post/dtos/post-translation.dto"]: await import("./modules/post/dtos/post-translation.dto"),
        ["./modules/user/user.entity"]: await import("./modules/user/user.entity"),
        ["./modules/post/post-translation.entity"]: await import("./modules/post/post-translation.entity"),
        ["./common/constants/role-type"]: await import("./common/constants/role-type"),
        ["./modules/user/dtos/user.dto"]: await import("./modules/user/dtos/user.dto"),
        ["./modules/user/user-settings.entity"]: await import("./modules/user/user-settings.entity"),
        ["./modules/session/feature/session.entity"]: await import("./modules/session/feature/session.entity"),
        ["./common/dto/abstract.dto"]: await import("./common/dto/abstract.dto"),
        ["./common/constants/order"]: await import("./common/constants/order"),
        ["./common/dto/page-meta.dto"]: await import("./common/dto/page-meta.dto"),
        ["./common/constants/api-key.enum"]: await import("./common/constants/api-key.enum"),
        ["./shared/response/dtos/response.dto"]: await import("./shared/response/dtos/response.dto"),
        ["./shared/response/dtos/response-paging.dto"]: await import("./shared/response/dtos/response-paging.dto"),
        ["./common/dto/create-translation.dto"]: await import("./common/dto/create-translation.dto"),
        ["./modules/auth/dto/login-response.dto"]: await import("./modules/auth/dto/login-response.dto"),
        ["./modules/auth/dto/refresh-response.dto"]: await import("./modules/auth/dto/refresh-response.dto"),
        ["./modules/post/dtos/post.dto"]: await import("./modules/post/dtos/post.dto")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./modules/post/post-translation.entity"), { "PostTranslationEntity": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, postId: { required: true, type: () => Object }, post: { required: false, type: () => t["./modules/post/post.entity"].PostEntity } } }], [import("./modules/post/dtos/post-translation.dto"), { "PostTranslationDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, languageCode: { required: false, enum: t["./common/constants/language-code"].LanguageCode } } }], [import("./modules/post/dtos/post.dto"), { "PostDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, info: { required: true, type: () => String }, translations: { required: false, type: () => [t["./modules/post/dtos/post-translation.dto"].PostTranslationDto] } } }], [import("./modules/post/post.entity"), { "PostEntity": { userId: { required: true, type: () => Object }, user: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, translations: { required: false, type: () => [t["./modules/post/post-translation.entity"].PostTranslationEntity] } } }], [import("./modules/user/dtos/user.dto"), { "UserDto": { firstName: { required: false, type: () => String, nullable: true }, lastName: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, role: { required: false, enum: t["./common/constants/role-type"].RoleType }, email: { required: false, type: () => String }, avatar: { required: false, type: () => String, nullable: true }, phone: { required: false, type: () => String, nullable: true }, isActive: { required: false, type: () => Boolean } } }], [import("./modules/session/dtos/session.dto"), { "SessionDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, userId: { required: true, type: () => Object }, hash: { required: true, type: () => String } } }], [import("./modules/session/feature/session.entity"), { "SessionEntity": { user: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, userId: { required: true, type: () => Object }, hash: { required: true, type: () => String } } }], [import("./modules/user/user-settings.entity"), { "UserSettingsEntity": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean }, userId: { required: false, type: () => String }, user: { required: false, type: () => t["./modules/user/user.entity"].UserEntity } } }], [import("./modules/user/user.entity"), { "UserEntity": { firstName: { required: true, type: () => String, nullable: true }, lastName: { required: true, type: () => String, nullable: true }, role: { required: true, enum: t["./common/constants/role-type"].RoleType }, email: { required: true, type: () => String }, password: { required: true, type: () => String, nullable: true }, phone: { required: true, type: () => String, nullable: true }, avatar: { required: true, type: () => String, nullable: true }, fullName: { required: true, type: () => String }, settings: { required: false, type: () => t["./modules/user/user-settings.entity"].UserSettingsEntity }, posts: { required: false, type: () => [t["./modules/post/post.entity"].PostEntity] }, sessions: { required: false, type: () => [t["./modules/session/feature/session.entity"].SessionEntity] } } }], [import("./common/dto/abstract.dto"), { "AbstractDto": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, translations: { required: false, type: () => [t["./common/dto/abstract.dto"].AbstractTranslationDto] } }, "AbstractTranslationDto": {} }], [import("./common/abstract.entity"), { "AbstractEntity": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date, nullable: true }, translations: { required: false } }, "AbstractTranslationEntity": { languageCode: { required: true, enum: t["./common/constants/language-code"].LanguageCode } } }], [import("./common/dto/create-translation.dto"), { "CreateTranslationDto": { languageCode: { required: true, enum: t["./common/constants/language-code"].LanguageCode }, text: { required: true, type: () => String } } }], [import("./common/dto/page-options.dto"), { "PageOptionsDto": { order: { required: true, enum: t["./common/constants/order"].Order }, page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, q: { required: false, type: () => String } } }], [import("./common/dto/page-meta.dto"), { "PageMetaDto": { page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, itemCount: { required: true, type: () => Number }, pageCount: { required: true, type: () => Number }, hasPreviousPage: { required: true, type: () => Boolean }, hasNextPage: { required: true, type: () => Boolean } } }], [import("./common/dto/page.dto"), { "PageDto": { data: { required: true }, paginationMeta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto } } }], [import("./modules/api-key/repository/entities/api-key.entity"), { "ApiKeyEntity": { type: { required: true, enum: t["./common/constants/api-key.enum"].ApiKeyType }, name: { required: true, type: () => String }, key: { required: true, type: () => String }, hash: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date } } }], [import("./modules/api-key/dtos/api-key.dto"), { "ApiKeyDto": { hash: { required: false, type: () => String }, isActive: { required: false, type: () => Boolean }, endDate: { required: false, type: () => Date, nullable: true }, startDate: { required: false, type: () => Date, nullable: true }, name: { required: false, type: () => String }, type: { required: false, enum: t["./common/constants/api-key.enum"].ApiKeyType }, key: { required: false, type: () => String }, secret: { required: false, type: () => String } } }], [import("./modules/api-key/dtos/api-key-payload.dto"), { "ApiKeyPayloadDto": {} }], [import("./modules/api-key/dtos/api-key-page.dto"), { "ApiKeysPageOptionsDto": {} }], [import("./modules/api-key/dtos/request/api-key-update-date-request.dto"), { "ApiKeyUpdateDateRequestDto": { startDate: { required: true, type: () => Date }, endDate: { required: true, type: () => Date } } }], [import("./modules/api-key/dtos/request/api-key-update-request.dto"), { "ApiKeyUpdateRequestDto": { name: { required: true, type: () => String } } }], [import("./modules/api-key/dtos/request/api-key-create-request.dto"), { "ApiKeyCreateRawRequestDto": { key: { required: true, type: () => String }, secret: { required: true, type: () => String } } }], [import("./shared/response/dtos/response.dto"), { "ResponseMetadataDto": { language: { required: true, type: () => String }, timestamp: { required: true, type: () => Number }, timezone: { required: true, type: () => String }, path: { required: true, type: () => String }, version: { required: true, type: () => String } }, "ResponseDto": { statusCode: { required: true, type: () => Number }, _metadata: { required: true, type: () => t["./shared/response/dtos/response.dto"].ResponseMetadataDto } } }], [import("./shared/response/dtos/response-paging.dto"), { "ResponsePagingMetadataPaginationRequestDto": { availableSearch: { required: true, type: () => [String] } }, "ResponsePagingMetadataDto": { pagination: { required: false, type: () => t["./shared/response/dtos/response-paging.dto"].ResponsePagingMetadataPaginationRequestDto } }, "ResponsePagingDto": { _metadata: { required: true, type: () => t["./shared/response/dtos/response-paging.dto"].ResponsePagingMetadataDto }, paginationMeta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto }, data: { required: true, type: () => [Object] } } }], [import("./modules/user/dtos/create-settings.dto"), { "CreateSettingsDto": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean } } }], [import("./modules/user/dtos/users-page-options.dto"), { "UsersPageOptionsDto": {} }], [import("./modules/auth/dto/auth-register-login.dto"), { "AuthRegisterLoginDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phone: { required: false, type: () => String }, avatar: { required: false, type: () => String } } }], [import("./modules/auth/dto/auth-email-login.dto"), { "AuthEmailLoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/auth-update.dto"), { "AuthUpdateDto": { firstName: { required: false, type: () => String }, lastName: { required: false, type: () => String }, email: { required: false, type: () => String }, password: { required: false, type: () => String }, phone: { required: false, type: () => String }, oldPassword: { required: false, type: () => String } } }], [import("./modules/auth/dto/login-response.dto"), { "LoginResponseDto": { token: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, tokenExpires: { required: true, type: () => Number }, user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/auth/dto/auth-confirm-email.dto"), { "AuthConfirmEmailDto": { hash: { required: true, type: () => String } } }], [import("./modules/auth/dto/auth-forgot-password.dto"), { "AuthForgotPasswordDto": { email: { required: true, type: () => String } } }], [import("./modules/auth/dto/auth-reset-password.dto"), { "AuthResetPasswordDto": { password: { required: true, type: () => String }, hash: { required: true, type: () => String } } }], [import("./modules/auth/dto/refresh-response.dto"), { "RefreshResponseDto": { token: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, tokenExpires: { required: true, type: () => Number } } }], [import("./modules/post/dtos/create-post.dto"), { "CreatePostDto": { title: { required: true, type: () => [t["./common/dto/create-translation.dto"].CreateTranslationDto] }, description: { required: true, type: () => [t["./common/dto/create-translation.dto"].CreateTranslationDto] } } }], [import("./modules/post/dtos/post-page-options.dto"), { "PostPageOptionsDto": {} }], [import("./modules/post/dtos/update-post.dto"), { "UpdatePostDto": {} }]], "controllers": [[import("./modules/api-key/controllers/api-key.controller"), { "ApiKeyAdminController": { "list": {}, "create": {}, "reset": {}, "update": {}, "inactive": {}, "active": {}, "updateDate": {}, "delete": {} } }], [import("./modules/user/user.controller"), { "UserController": { "admin": {}, "getUsers": {}, "getUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "login": { type: t["./modules/auth/dto/login-response.dto"].LoginResponseDto }, "register": {}, "confirmEmail": {}, "confirmNewEmail": {}, "forgotPassword": {}, "resetPassword": {}, "refresh": { type: t["./modules/auth/dto/refresh-response.dto"].RefreshResponseDto }, "logout": {}, "update": { type: Object }, "delete": {}, "getCurrentUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/health-checker/health-checker.controller"), { "HealthCheckerController": { "check": { type: Object } } }], [import("./modules/photos/photos.controller"), { "PhotosController": { "uploadSingle": { type: String }, "uploadMultiple": { type: [String] } } }], [import("./modules/post/post.controller"), { "PostController": { "createPost": { type: t["./modules/post/dtos/post.dto"].PostDto }, "getPosts": {}, "getSinglePost": { type: t["./modules/post/dtos/post.dto"].PostDto }, "updatePost": {}, "deletePost": {} } }]] } };
};